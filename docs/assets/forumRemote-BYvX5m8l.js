function u(){try{const o=new URL(window.location.href),s=o.searchParams.get("api");if(s){localStorage.setItem("forum:api_base",s);try{o.searchParams.delete("api"),history.replaceState({},"",o.toString())}catch{}}const a=localStorage.getItem("forum:api_base");if(a)return a}catch{}return"https://notifications-worker.wizardiowhy.workers.dev/skyapi"}const p=u(),r="forum:token";function y(){try{return localStorage.getItem(r)??sessionStorage.getItem(r)}catch{return null}}async function n(t,o={}){const s=y(),a={"Content-Type":"application/json",...o.headers||{}};s&&(a.Authorization=`Bearer ${s}`);const c=await fetch(`${p}${t}`,{...o,headers:a}),i=await c.text();let e={};try{e=i?JSON.parse(i):{}}catch{e={error:i||c.statusText}}if(!c.ok)throw new Error((e==null?void 0:e.error)||`${c.status} ${c.statusText}`);return e}async function d(){const{sections:t}=await n("/sections");return t}async function f(t){const{section:o}=await n("/sections",{method:"POST",body:JSON.stringify(t)});return o}async function m(t,o){const{section:s}=await n(`/sections/${t}`,{method:"PATCH",body:JSON.stringify(o)});return s}async function h(t){await n(`/sections/${encodeURIComponent(t)}`,{method:"DELETE"})}async function l(t){const o=t?`?sectionId=${encodeURIComponent(t)}`:"",{topics:s}=await n(`/topics${o}`);return s}async function w(t){const{topic:o}=await n("/topics",{method:"POST",body:JSON.stringify(t)});return o}async function S(t,o){const{topic:s}=await n(`/topics/${t}`,{method:"PATCH",body:JSON.stringify(o)});return s}async function T(t){try{const{topic:o}=await n(`/topics/${t}`);return o}catch{return null}}async function g(t,o){const{topic:s}=await n(`/topics/${t}/move`,{method:"POST",body:JSON.stringify({to:o})});return s}async function $(t){await n(`/topics/${encodeURIComponent(t)}`,{method:"DELETE"})}async function P(t){const{posts:o}=await n(`/posts?topicId=${encodeURIComponent(t)}`);return o}async function O(t){const{post:o}=await n("/posts",{method:"POST",body:JSON.stringify(t)});return o}async function E(t,o){const{post:s}=await n(`/posts/${t}`,{method:"PATCH",body:JSON.stringify(o)});return s}async function I(t){await n(`/posts/${encodeURIComponent(t)}`,{method:"DELETE"})}async function b(t){const{post:o}=await n(`/posts/${encodeURIComponent(t)}/like`,{method:"POST"});return o}async function k(t=8){const{posts:o}=await n(`/latest-posts?limit=${t}`);return o}export{k as a,l as b,w as c,P as d,O as e,I as f,T as g,S as h,f as i,m as j,h as k,d as l,g as m,$ as n,b as t,E as u};
